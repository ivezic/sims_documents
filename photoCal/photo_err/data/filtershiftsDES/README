The file DESfilts_as_LSSTfilts_130327.fits comes from AndyR and includes
his translation of DES filters into some sort of LSST equivalent. 

He compensated for the fact that the DES incident angle beam is different than LSST's
(so the edges of the filters will have different slopes, and this might influence the 
'wiggliness' within the filter bandpass as well), and for the fact that LSST's 
filter edge locations are different than the DES locations (using the LSST filter edge locations
defined in camera requirements docs). He did not change the peak value of the filter transmission. 

There are 3 extensions:
>>> import pyfits
>>> hdus = pyfits.open('DESfilts_as_LSSTfilts_130327.fits')
>>> hdus.info()
Filename: DESfilts_as_LSSTfilts_130327.fits
No.    Name         Type      Cards   Dimensions   Format
0    PRIMARY     PrimaryHDU      11   (0, 0)       uint8   
1    WAVELENGTH GRID  BinTableHDU     15   1R x 1C      [1PE(901)]   
2    DESfilt as LSSTfilt BANDPASS  BinTableHDU     42   3209R x 10C   [1E, 1E, 1E, 1E, 1PE(901), 1PE(901), 1PE(901), 1PE(901), 1PE(901), 1PE(901)]  

The filters are sampled at 10nm intervals across the focal plane, and at 1nm intervals across the
 bandpass.

Wavelength grid (ext 1)

>>> hdus[1].header
XTENSION= 'BINTABLE'           / binary table extension                         
BITPIX  =                    8 / 8-bit bytes                                    
NAXIS   =                    2 / 2-dimensional binary table                     
NAXIS1  =                    8 / width of table in bytes                        
NAXIS2  =                    1 / number of rows in table                        
PCOUNT  =                 3604 / size of special data area                      
GCOUNT  =                    1 / one data group (required keyword)              
TFIELDS =                    1 / number of fields in each row                   
TTYPE1  = 'wavelength'         / label for field   1                            
TFORM1  = '1PE(901)'           / data format of field: variable length array    
TUNIT1  = 'nm      '           / physical unit of field                         
EXTNAME = 'WAVELENGTH GRID'    / name of this binary table extension            
COMMENT generated by andy rasmussen arasmus@slac.stanford.edu                   
COMMENT using explore_field_variation.perl in /home/arasmus/DES/LSST_FORMAT     
DATE    = '2013-03-25T22:57:10' / file creation date (YYYY-MM-DDThh:mm:ss UT)   

>>> wavelen = hdus[1].data

>>> hdus[2].header
XTENSION= 'BINTABLE'           / binary table extension                         
BITPIX  =                    8 / 8-bit bytes                                    
NAXIS   =                    2 / 2-dimensional binary table                     
NAXIS1  =                   64 / width of table in bytes                        
NAXIS2  =                 3209 / number of rows in table                        
PCOUNT  =             69391416 / size of special data area                      
GCOUNT  =                    1 / one data group (required keyword)              
TFIELDS =                   10 / number of fields in each row                   
TTYPE1  = 'x       '           / label for field   1                            
TFORM1  = '1E      '           / data format of field: 4-byte REAL              
TUNIT1  = 'mm      '           / physical unit of field                         
TTYPE2  = 'y       '           / label for field   2                            
TFORM2  = '1E      '           / data format of field: 4-byte REAL              
TUNIT2  = 'mm      '           / physical unit of field                         
TTYPE3  = 'radial distance'    / label for field   3                            
TFORM3  = '1E      '           / data format of field: 4-byte REAL              
TUNIT3  = 'mm      '           / physical unit of field                         
TTYPE4  = 'azimuth '           / label for field   4                            
TFORM4  = '1E      '           / data format of field: 4-byte REAL              
TUNIT4  = 'degrees '           / physical unit of field                         
TTYPE5  = 'u band transmission' / label for field   5                           
TFORM5  = '1PE(901)'           / data format of field: variable length array    
TUNIT5  = 'none    '           / physical unit of field                         
TTYPE6  = 'g band transmission' / label for field   6                           
TFORM6  = '1PE(901)'           / data format of field: variable length array    
TUNIT6  = 'none    '           / physical unit of field                         
TTYPE7  = 'r band transmission' / label for field   7                           
TFORM7  = '1PE(901)'           / data format of field: variable length array    
TUNIT7  = 'none    '           / physical unit of field                         
TTYPE8  = 'i band transmission' / label for field   8                           
TFORM8  = '1PE(901)'           / data format of field: variable length array    
TUNIT8  = 'none    '           / physical unit of field                         
TTYPE9  = 'z band transmission' / label for field   9                           
TFORM9  = '1PE(901)'           / data format of field: variable length array    
TUNIT9  = 'none    '           / physical unit of field                         
TTYPE10 = 'y band transmission' / label for field  10                           
TFORM10 = '1PE(901)'           / data format of field: variable length array    
TUNIT10 = 'none    '           / physical unit of field                         
EXTNAME = 'DESfilt as LSSTfilt BANDPASS' / name of this binary table extension  
COMMENT generated by andy rasmussen arasmus@slac.stanford.edu                   
COMMENT using explore_field_variation.perl in /home/arasmus/DES/LSST_FORMAT     
DATE    = '2013-03-25T22:57:10' / file creation date (YYYY-MM-DDThh:mm:ss UT)   

wavelen = hdus[1].data.field(0)[0]
>>> numpy.shape(wavelen)
(901,)

tbdata = hdus[2].data
# Locations of data points
x = tbdata.field(0)
y = tbdata.field(1)
r = tbdata.field(2) # r in mm
az = tbdata.field(3)  (same info in r/az as in x/y)  # az in deg
# transmission function values
u_all = tbdata.field(4)
g_all = tbdata.field(5)
r_all = tbdata.field(6)
i_all = tbdata.field(7)
z_all = tbdata.field(8)
y4_all = tbdata.field(9)

len(u_all) = 3209 (and same for other values)
but each point in u_all is a full transmission curve. 
